3dbbb8d Network/Wifi Patchset 2 - Additional fixes and drivers after prior Patchset commit
f2bc500 staging/lmk: Ignore tasks with freed mm A killed task can stay in the task list long after its memory has been returned to the system, therefore ignore any tasks whose mm struct has been freed.
2f7e92d staging: lmk: back to good old JBX modifed lmk version
21e2a0d Set SLAB memory allocation as default
27a39ce tweak the min/mnax readahead value
7cc7ed6 Makefile: Use O3 compiler optimizations
b40b8bf Added BITS_PER_LONG_LONG definition avoiding lib/vsprintf.c errors.
c276c74 lib: Update RWSEM to Linux 3.10
69e533f Network/Wifi Patchset - downgrade/edit all wifi and networtk drivers for power efficient usage
25b7a7d random: backport updates from Linux master (3.13-rc4) lib, net: make isodigit() public and use itAndy Shevchenko random: add debugging code to detect early use of get_random_bytes()Theodore Ts'o random: initialize the last_time field in struct timer_rand_stateTheodore Ts'o random: don't zap entropy count in rand_initialize()Theodore Ts'o random: printk notifications for urandom pool initializationTheodore Ts'o random: make add_timer_randomness() fill the nonblocking pool firstTheodore Ts'o random: convert DEBUG_ENT to tracepointsTheodore Ts'o random: push extra entropy to the output poolsTheodore Ts'o random: drop trickle modeTheodore Ts'o random: adjust the generator polynomials in the mixing function slightlyTheodore Ts'o random: speed up the fast_mix function by a factor of fourTheodore Ts'o random: cap the rate which the /dev/urandom pool gets reseededTheodore Ts'o random: optimize the entropy_store structureTheodore Ts'o random: optimize spinlock use in add_device_randomness()Theodore Ts'o random: fix the tracepoint for get_random_bytes(_arch)Theodore Ts'o random: account for entropy loss due to overwritesH. Peter Anvin random: allow fractional bits to be trackedH. Peter Anvin random: statically compute poolbitshift, poolbytes, poolbitsH. Peter Anvin random: mix in architectural randomness earlier in extract_buf()Theodore Ts'o random: allow architectures to optionally define random_get_entropy()Theodore Ts'o random: run random_int_secret_init() run after all late_initcallsTheodore Ts'o char: Convert use of typedef ctl_table to struct ctl_tableJoe Perches1 random: fix accounting race condition with lockless irq entropy_count updateJiri Kosina drivers/char/random.c: fix priming of last_dataJarod Wilson lib/string_helpers: introduce generic string_unescapeAndy Shevchenko random: fix locking dependency with the tasklist_lockTheodore Ts'o locking: Various static lock initializer fixesThomas Gleixner random: prime last_data value per fips requirementsJarod Wilson random: fix debug format stringsJiri Kosina random: make it possible to enable debugging without rebuildJiri Kosina random: mix in architectural randomness in extract_buf()H. Peter Anvin random: Add comment to random_initialize()Tony Luck random: add tracepoints for easier debugging and verificationTheodore Ts'o
1936424 hw_breakpoint: Add a missing variable definition
5e5debb sync: signal pt before sync_timeline object gets destroyed There is a race condition
ee0f0b4 sync: Fix a race condition between release_obj and print_obj Before this change, a timeline would only be removed from the timeline list *after* the sync driver had its release_obj() called. However, the driver's release_obj() may free resources needed by print_obj().
45ff6a3 staging: android: ashmem: Avoid deadlock with mmap/shrink Both ashmem_mmap and ashmem_shrink take the ashmem_lock. It may be possible for ashmem_mmap to invoke ashmem_shrink:
a0bd516 workqueue: cond_resched() after processing each work item This becomes dangerous when a self-requeueing work item which is waiting for something to happen races against stop_machine.  Such self-requeueing work item would requeue itself indefinitely hogging the kworker and CPU it's running on while stop_machine would wait for that CPU to enter stop_machine while preventing anything else from happening on all other CPUs.  The two would deadlock.
e7dfe17 Added todays changelog and updated full history
922eb33 Update JBX 3.3.5
a127e9d dyn_fsync / dyn_async: update suspend actions for dyn_fsync and make dyn_fsync the default method. HTC's Async Fsync is now disabled by default
